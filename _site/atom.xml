<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title></title>
 <link href="/atom.xml" rel="self"/>
 <link href=""/>
 <updated>2014-10-11T21:32:24+08:00</updated>
 <id></id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>flume 单机部署</title>
   <link href="/2014/10/10/how-to-install-flume.html"/>
   <updated>2014-10-10T00:00:00+08:00</updated>
   <id>h/2014/10/10/how-to-install-flume</id>
   <content type="html">&lt;h1&gt;flume 单机部署&lt;/h1&gt;

&lt;p&gt;Flume是一个分布式、可靠、和高可用的海量日志聚合的系统，支持在系统中定制各类数据发送方，用于收集数据；同时，Flume提供对数据进行简单处理，并写到各种数据接受方（可定制）的能力。&lt;/p&gt;

&lt;p&gt;开发环境：
- jdk 1.6&lt;br/&gt;
- maven
- linux&lt;/p&gt;

&lt;h2&gt;下载 flume&lt;/h2&gt;

&lt;p&gt;地址 &lt;code&gt;　http://www.apache.org/dyn/closer.cgi/flume/1.5.0/apache-flume-1.5.0-bin.tar.gz&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;maven 安装&lt;/h2&gt;

&lt;p&gt;运行 ｀maven&#39; 命令查看 maven是否安装&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;localhost:log likunran$ maven
-bash: maven: command not found&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;maven 没有安装，下载maven 配置环境变量&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;./etc/profile 文件   全局共有配置，无论哪个用户登录，都会读取此&gt; 文件
/etc/bashrc    （一般在这个文件中添加系统级环境变量）全局（公有）配置，bash shell执行时，不管是何种方式，都会读取此文件。
~/.bash_profile  （一般在这个文件中添加用户级环境变量）&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;添加环境变量&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;MAVEN_HOME=/Users/likunran/tools/apache-maven-2.2.1
PATH=$MAVEN_HOME/bin:$PATH
export MAVEN_HOME
export PATH&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt; &lt;code&gt;source .bash_profile&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;项目编译&lt;/h2&gt;

&lt;p&gt;   1.进入到storm-starter 文件夹 把 m2-pom.xml重命&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;mv m2-pom.xml pom.xml&lt;/br&gt;
mvn install&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;   编译结果&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 9 seconds
[INFO] Finished at: Tue Sep 23 23:36:05 CST 2014
[INFO] Final Memory: 40M/85M&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编译过程中请保持外网是可以正常访问的&lt;/p&gt;

&lt;h2&gt;部署 到storm&lt;/h2&gt;

&lt;p&gt;1.进入 target目录看到storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar 文件已经存在。把文件部署到 storm&lt;/p&gt;

&lt;p&gt;2.提交 &lt;code&gt;./storm jar /export/data/storm/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar storm.starter.WordCountTopology wordcountTop －100&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;3.访问storm ui&lt;/p&gt;

&lt;p&gt;http://10.37.129.3:8080/
图如下
&lt;img src=&quot;/css/images/st2.png&quot; alt=&quot;Alt text&quot; height=&quot;300&quot;&gt;&lt;/p&gt;

&lt;h1&gt;总结&lt;/h1&gt;

&lt;p&gt;有时候打包提交 会报错 Storm Found multiple defaults.yaml resources 。遇到这错误是因为storm的storm的defaultsyarm打进去了。这个文件在storm-core.jar里面已经有了，设置storm依赖的scope为provided好了&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>mongodb 安装</title>
   <link href="/2014/09/30/how-to-make-mongodb.html"/>
   <updated>2014-09-30T00:00:00+08:00</updated>
   <id>h/2014/09/30/how-to-make-mongodb</id>
   <content type="html">&lt;h1&gt;mongodb 安装&lt;/h1&gt;

&lt;p&gt;项目中日志量增大。准备把日志存储起来 想把日志存到hbase但是rowkey设计比较麻烦。而且日之后查询到纬度也比较多。今天尝试把日志先写到redis 然后用队列在同步到mongodb.&lt;/p&gt;

&lt;p&gt;机子上的基本环境：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;centos&lt;/li&gt;
&lt;li&gt;mongodb&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;mysql&lt;/h2&gt;

&lt;p&gt;  1.本地已经安装 mysql 启动mysql&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;bash-4.1#   /etc/init.d/mysqld  start
  正在启动 mysqld： [确定]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 执行：&lt;code&gt;mysql -uroot -p123456&lt;/code&gt;，提示：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &amp;#39;help;&amp;#39; or &amp;#39;\h&amp;#39; for help. Type &amp;#39;\c&amp;#39; to clear the current input statement.

mysql&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.建立数据库和数据表 完成后结果如下&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;mysql&amp;gt; use uyicu
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&amp;gt; desc system_log
    -&amp;gt; ;
+-------------+---------------+------+-----+---------+----------------+
| Field       | Type          | Null | Key | Default | Extra          |
+-------------+---------------+------+-----+---------+----------------+
| id          | int(4)        | NO   | PRI | NULL    | auto_increment |
| log_name    | varchar(1000) | YES  |     | NULL    |                |
| log_value   | varchar(1000) | YES  |     | NULL    |                |
| create_time | datetime      | YES  |     | NULL    |                |
| modify_time | datetime      | YES  |     | NULL    |                |
| yn          | int(11)       | YES  |     | NULL    |                |
+-------------+---------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

mysql&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;strom-starter 添加 pom依赖&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-core&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-beans&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-context&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-context-support&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;

            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-aop&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-aspects&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-tx&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-jdbc&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
              &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;5.1.26&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.mybatis&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;mybatis-spring&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.2.0&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.mybatis&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;mybatis&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;3.2.2&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;druid&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;0.2.25&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;添加spring+mybatis配置文件&lt;/h2&gt;

&lt;p&gt;   mybatis 配置大家开参考 spring mybatis配置篇
   添加 spring-config.xml
       spring-config-dao.xml&lt;/p&gt;

&lt;h2&gt;添加SpringUtils&lt;/h2&gt;

&lt;p&gt;   springUtils用于加载spring 配置
  ｀&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public static void build() {

    if (null == factory) {
        factory = new ClassPathXmlApplicationContext(&quot;spring-config.xml&quot;);
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;｀&lt;/p&gt;

&lt;h2&gt;storm RandomSentenceSpout 代码修改&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private ULogMapper uLogMapper;


    /**
     * open 方法用于初始化
     * @param conf
     * @param context
     * @param collector
     */
  @Override
  public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) {
    _collector = collector;

      uLogMapper= SpringUtils.uLogMapperInstance();
      _rand = new Random();
  }

    /**
     * 在SpoutTracker类中被调用，每调用一次就可以向storm集群中发射一条数据（一个Tuple元组），该方法会被不停的调用
     */
  @Override
  public void nextTuple() {



      ULog uLog=new ULog();
      uLog.setCreateTime(new Date());
      uLog.setLogName(&amp;quot;nameSpout&amp;quot;);
      uLog.setLogValue(&amp;quot;value&amp;quot;);
      uLogMapper.insert(uLog) ;

    Utils.sleep(100);
    String[] sentences = new String[]{ &amp;quot;the cow jumped over the moon&amp;quot;, &amp;quot;an apple a day keeps the doctor away&amp;quot;,
        &amp;quot;four score and seven years ago&amp;quot;, &amp;quot;snow white and the seven dwarfs&amp;quot;, &amp;quot;i am at two with nature&amp;quot; };
    String sentence = sentences[_rand.nextInt(sentences.length)];
    _collector.emit(new Values(sentence));
  }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;总结&lt;/h1&gt;

&lt;p&gt;在本地模式运行成功&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>storm 结合 mybatis 数据 入库</title>
   <link href="/2014/09/27/how-to-mysql-on-storm.html"/>
   <updated>2014-09-27T00:00:00+08:00</updated>
   <id>h/2014/09/27/how-to-mysql-on-storm</id>
   <content type="html">&lt;h1&gt;storm 结合 mybatis 数据 入库&lt;/h1&gt;

&lt;p&gt;storm strom-starter-master  项目WordCountTopology 进行操作数据扩展。使用 druid作为数据源 用spring+mybatis 计算结果写到msql中。&lt;/p&gt;

&lt;p&gt;机子上的基本环境：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;li&gt;idea&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;mysql&lt;/h2&gt;

&lt;p&gt;  1.本地已经安装 mysql 启动mysql&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;bash-4.1#   /etc/init.d/mysqld  start
  正在启动 mysqld： [确定]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; 执行：&lt;code&gt;mysql -uroot -p123456&lt;/code&gt;，提示：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &amp;#39;help;&amp;#39; or &amp;#39;\h&amp;#39; for help. Type &amp;#39;\c&amp;#39; to clear the current input statement.

mysql&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.建立数据库和数据表 完成后结果如下&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;mysql&amp;gt; use uyicu
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&amp;gt; desc system_log
    -&amp;gt; ;
+-------------+---------------+------+-----+---------+----------------+
| Field       | Type          | Null | Key | Default | Extra          |
+-------------+---------------+------+-----+---------+----------------+
| id          | int(4)        | NO   | PRI | NULL    | auto_increment |
| log_name    | varchar(1000) | YES  |     | NULL    |                |
| log_value   | varchar(1000) | YES  |     | NULL    |                |
| create_time | datetime      | YES  |     | NULL    |                |
| modify_time | datetime      | YES  |     | NULL    |                |
| yn          | int(11)       | YES  |     | NULL    |                |
+-------------+---------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

mysql&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;strom-starter 添加 pom依赖&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-core&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-beans&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-context&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-context-support&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;

            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-aop&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-aspects&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-tx&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-jdbc&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${spring.version}&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
              &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;mysql&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;mysql-connector-java&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;5.1.26&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.mybatis&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;mybatis-spring&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.2.0&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.mybatis&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;mybatis&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;3.2.2&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;druid&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;0.2.25&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;添加spring+mybatis配置文件&lt;/h2&gt;

&lt;p&gt;   mybatis 配置大家开参考 spring mybatis配置篇
   添加 spring-config.xml
       spring-config-dao.xml&lt;/p&gt;

&lt;h2&gt;添加SpringUtils&lt;/h2&gt;

&lt;p&gt;   springUtils用于加载spring 配置
  ｀&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public static void build() {

    if (null == factory) {
        factory = new ClassPathXmlApplicationContext(&quot;spring-config.xml&quot;);
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;｀&lt;/p&gt;

&lt;h2&gt;storm RandomSentenceSpout 代码修改&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private ULogMapper uLogMapper;


    /**
     * open 方法用于初始化
     * @param conf
     * @param context
     * @param collector
     */
  @Override
  public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) {
    _collector = collector;

      uLogMapper= SpringUtils.uLogMapperInstance();
      _rand = new Random();
  }

    /**
     * 在SpoutTracker类中被调用，每调用一次就可以向storm集群中发射一条数据（一个Tuple元组），该方法会被不停的调用
     */
  @Override
  public void nextTuple() {



      ULog uLog=new ULog();
      uLog.setCreateTime(new Date());
      uLog.setLogName(&amp;quot;nameSpout&amp;quot;);
      uLog.setLogValue(&amp;quot;value&amp;quot;);
      uLogMapper.insert(uLog) ;

    Utils.sleep(100);
    String[] sentences = new String[]{ &amp;quot;the cow jumped over the moon&amp;quot;, &amp;quot;an apple a day keeps the doctor away&amp;quot;,
        &amp;quot;four score and seven years ago&amp;quot;, &amp;quot;snow white and the seven dwarfs&amp;quot;, &amp;quot;i am at two with nature&amp;quot; };
    String sentence = sentences[_rand.nextInt(sentences.length)];
    _collector.emit(new Values(sentence));
  }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;总结&lt;/h1&gt;

&lt;p&gt;在本地模式运行成功&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>storm提交程序 strom-starter-master</title>
   <link href="/2014/09/23/how-to-deploy-strom-master.html"/>
   <updated>2014-09-23T00:00:00+08:00</updated>
   <id>h/2014/09/23/how-to-deploy-strom-master</id>
   <content type="html">&lt;h1&gt;storm提交程序 strom-starter-master&lt;/h1&gt;

&lt;p&gt;storm 已经部署完成准备写个例子测试下storm安装是否成功。当然选择了经典的代码storm-starter-master&lt;/p&gt;

&lt;p&gt;开发环境：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;idea&lt;/li&gt;
&lt;li&gt;jdk 1.6&lt;/li&gt;
&lt;li&gt;maven&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;下载 strom-starter-master&lt;/h2&gt;

&lt;p&gt;运行 &lt;code&gt;git clone https://github.com/nathanmarz/storm-starter.git&lt;/code&gt;，提示：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;localhost:log likunran$ git clone https://github.com/nathanmarz/storm-starter.gi
Cloning into &amp;#39;storm-starter.gi&amp;#39;...
remote: Repository not found.
fatal: repository &amp;#39;https://github.com/nathanmarz/storm-starter.gi/&amp;#39; not found
localhost:log likunran$ git clone https://github.com/nathanmarz/storm-starter.git
Cloning into &amp;#39;storm-starter&amp;#39;...
remote: Counting objects: 756, done.
remote: Total 756 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (756/756), 171.81 KiB | 117.00 KiB/s, done.
Resolving deltas: 100% (274/274), done.
Checking connectivity... done.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;maven 安装&lt;/h2&gt;

&lt;p&gt;运行 ｀maven&#39; 命令查看 maven是否安装&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;localhost:log likunran$ maven
-bash: maven: command not found&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;maven 没有安装，下载maven 配置环境变量&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;./etc/profile 文件   全局共有配置，无论哪个用户登录，都会读取此&gt; 文件
/etc/bashrc    （一般在这个文件中添加系统级环境变量）全局（公有）配置，bash shell执行时，不管是何种方式，都会读取此文件。
~/.bash_profile  （一般在这个文件中添加用户级环境变量）&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;添加环境变量&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;MAVEN_HOME=/Users/likunran/tools/apache-maven-2.2.1
PATH=$MAVEN_HOME/bin:$PATH
export MAVEN_HOME
export PATH&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt; &lt;code&gt;source .bash_profile&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;项目编译&lt;/h2&gt;

&lt;p&gt;   1.进入到storm-starter 文件夹 把 m2-pom.xml重命&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;mv m2-pom.xml pom.xml&lt;/br&gt;
mvn install&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;   编译结果&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 9 seconds
[INFO] Finished at: Tue Sep 23 23:36:05 CST 2014
[INFO] Final Memory: 40M/85M&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;编译过程中请保持外网是可以正常访问的&lt;/p&gt;

&lt;h2&gt;部署 到storm&lt;/h2&gt;

&lt;p&gt;1.进入 target目录看到storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar 文件已经存在。把文件部署到 storm&lt;/p&gt;

&lt;p&gt;2.提交 &lt;code&gt;./storm jar /export/data/storm/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar storm.starter.WordCountTopology wordcountTop －100&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;3.访问storm ui&lt;/p&gt;

&lt;p&gt;http://10.37.129.3:8080/
图如下
&lt;img src=&quot;/css/images/st2.png&quot; alt=&quot;Alt text&quot; height=&quot;300&quot;&gt;&lt;/p&gt;

&lt;h1&gt;总结&lt;/h1&gt;

&lt;p&gt;有时候打包提交 会报错 Storm Found multiple defaults.yaml resources 。遇到这错误是因为storm的storm的defaultsyarm打进去了。这个文件在storm-core.jar里面已经有了，设置storm依赖的scope为provided好了&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Centos 下 storm 单机部署</title>
   <link href="/2014/09/18/how-to-step-storm-on-centos.html"/>
   <updated>2014-09-18T00:00:00+08:00</updated>
   <id>h/2014/09/18/how-to-step-storm-on-centos</id>
   <content type="html">&lt;h1&gt;Centos 下 storm 单机部署&lt;/h1&gt;

&lt;p&gt;从去年做广告效果统计接触storm开始。开始了解了storm 也有一段时间了。这段时间想在自己机器上部署个storm 但是发现网上没有太好点教程就决定自己写一篇单机部署。&lt;/p&gt;

&lt;p&gt;机子上的基本环境：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;parallels 虚拟机&lt;/li&gt;
&lt;li&gt;centos&lt;/li&gt;
&lt;li&gt;python 2.6&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;jdk 替换&lt;/h2&gt;

&lt;p&gt;  1.首先卸载centos自带openjdk.
  2.官网下载jdk .
  3.配置环境变量 &lt;code&gt;vi /etc/profile&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;You are missing a library required for Markdown. Please run:ls
export JAVA_HOME=/export/home/server/jdk1.6.0_25
export CLASSPATH=$JAVA_HOME/jre/lib:$JAVA_HOME/lib
export PATH=$PATH:$JAVA_HOME/bin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行 java：&lt;code&gt;java -version&lt;/code&gt;，提示：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;You are missing a library required for Markdown. Please run:
java version &amp;quot;1.6.0_65&amp;quot;
Java(TM) SE Runtime Environment (build 1.6.0_65-b14-462-11M4609)
Java HotSpot(TM) 64-Bit Server VM (build 20.65-b04-462, mixed mode)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;python 安装&lt;/h2&gt;

&lt;p&gt;运行 ｀python -v｀ 命令查看python 版本&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# installing zipimport hook
import zipimport # builtin
# installed zipimport hook
# /usr/lib64/python2.6/site.pyc matches /usr/lib64/python2.6/site.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;python 2.6 版本已经存在无需安装&lt;/p&gt;

&lt;h2&gt;ZooKeeper 安装&lt;/h2&gt;

&lt;p&gt;   1.官网下载zookeeper&lt;/p&gt;

&lt;p&gt;   修改配置文件如下&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;tickTime=2000
dataDir=/home/hadoop/storage/zookeeper
clientPort=2181
initLimit=5
syncLimit=2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;具体的配置项的解释大家可以自己去查&lt;/p&gt;

&lt;h2&gt;ZeroMQ 安装&lt;/h2&gt;

&lt;p&gt;从 http://download.zeromq.org/zeromq-2.1.7.tar.gz 下载&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;tar zxf zeromq-2.1.7.tar.gz
cd zeromq-2.1.7
./configure
make
make install
sudo ldconfig&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;jzmq 安装&lt;/h2&gt;

&lt;p&gt;从http://github.com/nathanmarz/jzmq页面下载jzmq-master.zip&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;unzip -zxvf jzmq-master.zip
cd jzmq
./autogen.sh
./configure
make
make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Strom 安装&lt;/h2&gt;

&lt;p&gt; 我下载的是 0.9.0.1 这个版本可以选择是 jzmq或netty
 修改配置文件如下&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;storm.zookeeper.servers:
     - &amp;quot;localhost&amp;quot;

storm.zookeeper.port: 2181
storm.local.dir: /export/data/storm/tmp
nimbus.host: &amp;quot;localhost&amp;quot;
supervisor.slots.ports:
    - 6700
    - 6701
    - 6702
    - 6703&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;由于我现在是单机部署 所以配置loccalhost  zookeeper.port 配置 刚才　zk 端口 2181&lt;/p&gt;

&lt;p&gt;启动 strom&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;storm nimbus&amp;amp;
storm supervisor&amp;amp;
storm ui&amp;amp;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看日志
｀tail -f ui.log｀&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2014-09-18 22:09:40 o.m.log [INFO] Logging to Logger[org.mortbay.log] via org.mortbay.log.Slf4jLog
2014-09-18 22:09:40 o.m.log [INFO] Started SocketConnector@0.0.0.0:8080&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;访问strom ui&lt;/p&gt;

&lt;p&gt;http://10.37.129.3:8080/
图如下
&lt;img src=&quot;/css/images/sui.png&quot; alt=&quot;Alt text&quot; height=&quot;300&quot;&gt;&lt;/p&gt;

&lt;h1&gt;总结&lt;/h1&gt;

&lt;p&gt;在安装过程中 zeromq 刚开始报错很多。根据提示一步步装其他软件就可以搞定。在外部访问虚拟机strom ui时 记得把端口打开&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
